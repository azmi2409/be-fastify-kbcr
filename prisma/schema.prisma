// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  Staff
  Admin
  SuperAdmin
}

enum TreeStatus {
  Healthy
  Sick
  Died
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  password  String
  avatar    String?
  role      Role     @default(Staff)

  Schedules Schedule[]
}

model Variant {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  latin_name String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Tree Tree[]
}

model Tree {
  id            Int       @id @default(autoincrement())
  number        Int       @unique
  variantId     Int?
  location      String?
  planting_time DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  Status    Status?
  Photos    Photo[]
  Harvests  Harvest[]
  Schedules Schedule[]
  Variant   Variant?   @relation(fields: [variantId], references: [id])
}

model Log {
  scheduleId  Int      @id @unique
  done        Boolean  @default(true)
  executor    String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Schedule Schedule @relation(fields: [scheduleId], references: [id])
}

model Treatment {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Schedules Schedule[]
}

model Photo {
  id          Int      @id @default(autoincrement())
  treeId      Int
  url         String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Tree Tree @relation(fields: [treeId], references: [id])
}

model Harvest {
  id          Int      @id @default(autoincrement())
  treeId      Int
  weight      Int
  description String?
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Tree Tree @relation(fields: [treeId], references: [id])
}

model Schedule {
  id          Int      @id @default(autoincrement())
  treeId      Int
  treatmentId Int
  date        DateTime @default(now())
  description String?
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Logs Log[]

  User      User      @relation(fields: [userId], references: [id])
  Tree      Tree      @relation(fields: [treeId], references: [id])
  Treatment Treatment @relation(fields: [treatmentId], references: [id])
}

model Status {
  treeId      Int        @id @unique
  status      TreeStatus @default(Healthy)
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  Tree Tree @relation(fields: [treeId], references: [id])
}
